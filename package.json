{
  "name": "client-core",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "clean": "rm -fr dist/*",
    "build": "npm run clean && tsc",
    "watch": "tsc --watch",
    "prepublishOnly": "npm run build",
    "pretest": "npm run build",
    "test": "jest",
    "lint": "eslint . --ext .ts",
    "lint:fix": "eslint . --fix",
    "format": "prettier --loglevel warn --write \"**/*.{js,json,jsx,md,ts,tsx,html}\"",
    "format:check": "prettier --check \"**/*.{js,json,jsx,md,ts,tsx,html}\"",
    "posttest": "npm run lint && npm run format:check",
    "generate-docs": "typedoc",
    "pre-commit": "npx pretty-quick --staged && npm run test"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "axios": "^1.2.2",
    "axios-oauth-client": "^2.0.2",
    "axios-retry": "^3.3.1"
  },
  "devDependencies": {
    "@trivago/prettier-plugin-sort-imports": "^4.0.0",
    "@types/jest": "^29.2.5",
    "@types/node": "^18.11.18",
    "@typescript-eslint/eslint-plugin": "^5.48.1",
    "eslint": "^8.31.0",
    "eslint-config-iplayer-ts": "^4.1.0",
    "eslint-config-prettier": "^8.6.0",
    "eslint-plugin-prettier": "^4.2.1",
    "husky": "^8.0.3",
    "jest": "^29.3.1",
    "prettier": "^2.8.2",
    "pretty-quick": "^3.1.3",
    "ts-jest": "^29.0.3",
    "ts-node": "^10.9.1",
    "typedoc": "^0.23.24",
    "typescript": "^4.9.4"
  },
  "eslintConfig": {
    "extends": [
      "iplayer-ts",
      "prettier",
      "eslint:recommended",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:@typescript-eslint/recommended"
    ],
    "parserOptions": {
      "sourceType": "module"
    },
    "rules": {
      "@typescript-eslint/naming-convention": [
        "error",
        {
          "selector": "variable",
          "format": [
            "camelCase",
            "UPPER_CASE",
            "PascalCase"
          ],
          "leadingUnderscore": "allow"
        }
      ],
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-empty-function": "off",
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_"
        }
      ],
      "@typescript-eslint/consistent-type-assertions": [
        "error",
        {
          "assertionStyle": "as"
        }
      ],
      "func-style": [
        "error",
        "declaration",
        {
          "allowArrowFunctions": true
        }
      ]
    }
  }
}
